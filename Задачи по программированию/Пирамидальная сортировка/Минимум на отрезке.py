# Минимум на отрезке
# Рассмотрим последовательность целых чисел длины N. По ней с шагом 1 двигается “окно” длины K, то есть сначала в “окне” видно первые K чисел, на следующем шаге в “окне” уже будут находиться K чисел, начиная со второго, и так далее до конца последовательности. Требуется для каждого положения “окна” определить минимум в нём.
#
# Входные данные
#
# В первой строке входных данных содержатся два числа N и K (1 ≤  N ≤  150000, 1 ≤ K ≤ 10000, K ≤  N) – длины последовательности и “окна”, соответственно. На следующей строке находятся N чисел – сама последовательность.
#
# Выходные данные
#
# Выходные данные должны содержать N − K + 1 строк – минимумы для каждого положения “окна”.
#
# Sample Input:
#
# 7 3
# 1 3 2 4 5 3 1
# Sample Output:
#
# 1
# 2
# 2
# 3
# 1

n, k = map(int, input().split(" "))
arr = list(map(int, input().split(" ")))
newArr = []

i = 0
while True:
    if i > len(arr)-k:
        break
    for j in range(i, i+k):
        if j == len(arr):
            break
        else:
            newArr.append(arr[j])
    s = min(newArr)
    print(s)
    newArr = []
    i+=1